// Generated by CoffeeScript 1.4.0
(function() {
  var apiKey, application, debug, encode, exceptioScriptTag, httpRequest, script, scripts, url;

  scripts = function() {
    return document.getElementsByTagName('script');
  };

  exceptioScriptTag = function() {
    var script;
    return ((function() {
      var _i, _len, _ref, _results;
      _ref = scripts();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        script = _ref[_i];
        if (/exceptio.js/.test(script.src)) {
          _results.push(script);
        }
      }
      return _results;
    })())[0];
  };

  httpRequest = function() {
    if (window.XMLHttpRequest) {
      return new XMLHttpRequest();
    } else if (window.ActiveXObject) {
      return new ActiveXObject("Microsoft.XMLHTTP");
    }
  };

  encode = function(obj) {
    var prop, values;
    values = (function() {
      var _results;
      _results = [];
      for (prop in obj) {
        _results.push("" + (encodeURIComponent(prop)) + "=" + (encodeURIComponent(obj[prop])));
      }
      return _results;
    })();
    return values.join("&");
  };

  url = function() {
    return "except.io/applications/" + application + "/errors";
  };

  script = exceptioScriptTag();

  apiKey = script.getAttribute('data-api-key');

  application = script.getAttribute('data-application');

  debug = /true/.test(script.getAttribute('data-debug'));

  window.ExceptIO = {
    log: function(exception, environment, params, session, request_url) {
      var xhr;
      if (environment == null) {
        environment = "production";
      }
      if (params == null) {
        params = {};
      }
      if (session == null) {
        session = {};
      }
      if (request_url == null) {
        request_url = window.location.href;
      }
      xhr = httpRequest();
      xhr.open('POST', url);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      return xhr.send(encode({
        error: {
          message: exception,
          backtrace: '',
          type: '',
          environment: environment,
          params: params,
          session: session,
          request_url: request_url
        }
      }));
    }
  };

}).call(this);
